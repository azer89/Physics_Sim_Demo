/*
-----------------------------------------------------------------------------
Filename:    AZBullet.h
-----------------------------------------------------------------------------


This source file is generated by the
   ___                   _              __    __ _                  _ 
  /___\__ _ _ __ ___    /_\  _ __  _ __/ / /\ \ (_)______ _ _ __ __| |
 //  // _` | '__/ _ \  //_\\| '_ \| '_ \ \/  \/ / |_  / _` | '__/ _` |
/ \_// (_| | | |  __/ /  _  \ |_) | |_) \  /\  /| |/ / (_| | | | (_| |
\___/ \__, |_|  \___| \_/ \_/ .__/| .__/ \/  \/ |_/___\__,_|_|  \__,_|
      |___/                 |_|   |_|                                 
      Ogre 1.7.x Application Wizard for VC9 (July 2011)
      http://code.google.com/p/ogreappwizards/
-----------------------------------------------------------------------------
*/
#ifndef __AZBullet_h_
#define __AZBullet_h_

#include "BaseApplication.h"
#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
#include "../res/resource.h"
#endif

#include "OgreBulletDynamics.h"
#include "OgreBulletListener.h"

class AZBullet : public BaseApplication, 
	public OgreBulletListener 
{
public:
	AZBullet::AZBullet(void) : OgreBulletListener()
	{
		this->mName = "AZBullet";	
	}
    virtual ~AZBullet(void);
	

	void bulletInit(Ogre::Root *root, Ogre::RenderWindow *win, OgreBulletApplication *application);

	// void bulletKeyPressed(BULLET_KEY_CODE key);
	// void bulletKeyReleased(BULLET_KEY_CODE key);

	// bool bulletFrameStarted(Ogre::Real elapsedTime);

protected:
     virtual void createScene(void);

private:
	OgreBulletCollisions::HeightmapCollisionShape       *mTerrainShape;

	OgreBulletDynamics::WheeledRigidBody        *mCarChassis;
	OgreBulletDynamics::VehicleTuning	        *mTuning;
	OgreBulletDynamics::VehicleRayCaster	    *mVehicleRayCaster;
	OgreBulletDynamics::RaycastVehicle	        *mVehicle;

	Ogre::Entity    *mChassis;
	Ogre::Entity    *mWheels[4];
	Ogre::SceneNode *mWheelNodes[4];

	int mWheelsEngine[4];
	int mWheelsEngineCount;
	int mWheelsSteerable[4];
	int mWheelsSteerableCount;

	float mEngineForce;
	float mSteering;

	int mWheelEngineStyle;
	int mWheelSteeringStyle;


	bool mSteeringLeft;
	bool mSteeringRight;
};

#endif // #ifndef __AZBullet_h_
